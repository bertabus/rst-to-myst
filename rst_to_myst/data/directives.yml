# value one of:
# - "eval-rst": no conversion, wrap in MyST eval-rst directive
# - "direct": convert directly to MyST directive, keeping original argument/content
# - "parse_argument":  convert to MyST directive and convert the argument to Markdown
# - "parse_content":  convert to MyST directive and convert the content to Markdown
# - "parse_all":  convert to MyST directive and convert the argument and content to Markdown

# admonitions (docutils)
docutils.parsers.rst.directives.admonitions.Admonition: parse_all
docutils.parsers.rst.directives.admonitions.Attention: parse_content
docutils.parsers.rst.directives.admonitions.Caution: parse_content
docutils.parsers.rst.directives.admonitions.Danger: parse_content
docutils.parsers.rst.directives.admonitions.Error: parse_content
docutils.parsers.rst.directives.admonitions.Hint: parse_content
docutils.parsers.rst.directives.admonitions.Important: parse_content
docutils.parsers.rst.directives.admonitions.Note: parse_content
docutils.parsers.rst.directives.admonitions.Tip: parse_content
docutils.parsers.rst.directives.admonitions.Warning: parse_content

# docutils other (see https://docutils.sourceforge.io/docs/ref/rst/directives.html#figure)
docutils.parsers.rst.directives.body.CodeBlock: direct
docutils.parsers.rst.directives.body.Compound: eval-rst
docutils.parsers.rst.directives.body.Container: parse_content
docutils.parsers.rst.directives.body.Epigraph: eval-rst
docutils.parsers.rst.directives.body.Highlights: eval-rst
docutils.parsers.rst.directives.body.LineBlock: eval-rst
docutils.parsers.rst.directives.body.MathBlock: direct
docutils.parsers.rst.directives.body.ParsedLiteral: eval-rst
docutils.parsers.rst.directives.body.PullQuote: eval-rst
docutils.parsers.rst.directives.body.Rubric: parse_argument
docutils.parsers.rst.directives.body.Sidebar: parse_all
docutils.parsers.rst.directives.body.Topic: parse_all
docutils.parsers.rst.directives.html.Meta: eval-rst
docutils.parsers.rst.directives.images.Figure: parse_content
docutils.parsers.rst.directives.images.Image: direct
docutils.parsers.rst.directives.misc.Class: eval-rst
docutils.parsers.rst.directives.misc.Date: direct
docutils.parsers.rst.directives.misc.DefaultRole: eval-rst
docutils.parsers.rst.directives.misc.Include: direct
docutils.parsers.rst.directives.misc.Raw: direct
docutils.parsers.rst.directives.misc.Replace: parse_content
docutils.parsers.rst.directives.misc.Role: eval-rst
docutils.parsers.rst.directives.misc.TestDirective: eval-rst
docutils.parsers.rst.directives.misc.Title: direct
docutils.parsers.rst.directives.misc.Unicode: eval-rst
docutils.parsers.rst.directives.parts.Contents: parse_argument
docutils.parsers.rst.directives.parts.Footer: parse_content
docutils.parsers.rst.directives.parts.Header: parse_content
docutils.parsers.rst.directives.parts.Sectnum: eval-rst
docutils.parsers.rst.directives.references.TargetNotes: eval-rst
docutils.parsers.rst.directives.tables.CSVTable: direct
docutils.parsers.rst.directives.tables.ListTable: eval-rst
docutils.parsers.rst.directives.tables.RSTTable: eval-rst

## Sphinx

# code
sphinx.directives.patches.Code: direct
# math
sphinx.directives.patches.MathDirective: direct
# table
sphinx.directives.patches.RSTTable: eval-rst
# csv-table
sphinx.directives.patches.CSVTable: eval-rst
# list-table
sphinx.directives.patches.ListTable: eval-rst
# figure
sphinx.directives.patches.Figure: parse_content
# meta
sphinx.directives.patches.Meta: eval-rst

# deprecated, versionadded, versionchanged
sphinx.domains.changeset.VersionChange: parse_content
# seealso
sphinx.directives.other.SeeAlso: parse_content
# index
sphinx.domains.index.IndexDirective: direct
# default-domain
sphinx.directives.DefaultDomain: eval-rst
# describe
# object
sphinx.directives.ObjectDescription: eval-rst
# highlight
sphinx.directives.code.Highlight: direct
# highlightlang
# code-block
# sourcecode
sphinx.directives.code.CodeBlock: direct
# literalinclude
sphinx.directives.code.LiteralInclude: direct
# toctree
sphinx.directives.other.TocTree: direct
# sectionauthor
# moduleauthor
# codeauthor
sphinx.directives.other.Author: eval-rst
# tabularcolumns
sphinx.directives.other.TabularColumns: eval-rst
# centered
sphinx.directives.other.Centered: eval-rst
# acks
sphinx.directives.other.Acks: eval-rst
# hlist
sphinx.directives.other.HList: eval-rst
# only
sphinx.directives.other.Only: parse_content_titles

# c:member
# c:var
sphinx.domains.c.CMemberObject: eval-rst
# c:function
sphinx.domains.c.CFunctionObject: eval-rst
# c:macro
sphinx.domains.c.CMacroObject: eval-rst
# c:struct
sphinx.domains.c.CStructObject: eval-rst
# c:union
sphinx.domains.c.CUnionObject: eval-rst
# c:enum
sphinx.domains.c.CEnumObject: eval-rst
# c:enumerator
sphinx.domains.c.CEnumeratorObject: eval-rst
# c:type
sphinx.domains.c.CTypeObject: eval-rst
# c:namespace
sphinx.domains.c.CNamespaceObject: eval-rst
# c:namespace-push
sphinx.domains.c.CNamespacePushObject: eval-rst
# c:namespace-pop
sphinx.domains.c.CNamespacePopObject: eval-rst
# c:alias
sphinx.domains.c.CAliasObject: eval-rst
# cpp:class
# cpp:struct
sphinx.domains.cpp.CPPClassObject: eval-rst
# cpp:union
sphinx.domains.cpp.CPPUnionObject: eval-rst
# cpp:function
sphinx.domains.cpp.CPPFunctionObject: eval-rst
# cpp:member
# cpp:var
sphinx.domains.cpp.CPPMemberObject: eval-rst
# cpp:type
sphinx.domains.cpp.CPPTypeObject: eval-rst
# cpp:concept
sphinx.domains.cpp.CPPConceptObject: eval-rst
# cpp:enum
# cpp:enum-struct
# cpp:enum-class
sphinx.domains.cpp.CPPEnumObject: eval-rst
# cpp:enumerator
sphinx.domains.cpp.CPPEnumeratorObject: eval-rst
# cpp:namespace
sphinx.domains.cpp.CPPNamespaceObject: eval-rst
# cpp:namespace-push
sphinx.domains.cpp.CPPNamespacePushObject: eval-rst
# cpp:namespace-pop
sphinx.domains.cpp.CPPNamespacePopObject: eval-rst
# cpp:alias
sphinx.domains.cpp.CPPAliasObject: eval-rst
# js:function
# js:method
sphinx.domains.javascript.JSCallable: eval-rst
# js:class
sphinx.domains.javascript.JSConstructor: eval-rst
# js:data
# js:attribute
sphinx.domains.javascript.JSObject: eval-rst
# js:module
sphinx.domains.javascript.JSModule: eval-rst
# py:function
sphinx.domains.python.PyFunction: eval-rst
# py:data
sphinx.domains.python.PyVariable: eval-rst
# py:class
# py:exception
sphinx.domains.python.PyClasslike: eval-rst
# py:method
sphinx.domains.python.PyMethod: eval-rst
# py:classmethod
sphinx.domains.python.PyClassMethod: eval-rst
# py:staticmethod
sphinx.domains.python.PyStaticMethod: eval-rst
# py:attribute
sphinx.domains.python.PyAttribute: eval-rst
# py:module
sphinx.domains.python.PyModule: eval-rst
# py:currentmodule
sphinx.domains.python.PyCurrentModule: eval-rst
# py:decorator
sphinx.domains.python.PyDecoratorFunction: eval-rst
# py:decoratormethod
sphinx.domains.python.PyDecoratorMethod: eval-rst
# rst:directive
sphinx.domains.rst.ReSTDirective: eval-rst
# rst:directive:option
sphinx.domains.rst.ReSTDirectiveOption: eval-rst
# rst:role
sphinx.domains.rst.ReSTRole: eval-rst
# std:program
sphinx.domains.std.Program: eval-rst
# std:cmdoption
# std:option
sphinx.domains.std.Cmdoption: eval-rst
# std:envvar
sphinx.domains.std.EnvVar: eval-rst
# std:glossary
sphinx.domains.std.Glossary: parse_content
# std:productionlist
sphinx.domains.std.ProductionList: eval-rst

# third-party directives
sphinxcontrib.bibtex.directives.BibliographyDirective: direct
sphinx_panels.dropdown.DropdownDirective: parse_all
